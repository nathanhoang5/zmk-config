/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {

	behaviors {
        bm: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
		hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	macros {
        arrow_mac: arrow_mac {
            label = "ZM_arrow_mac";
            compatible = "zmk,behavior-macro";
			wait-ms = <10>;
			tap-ms = <10>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT>;
        };
    };	

	
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp GRAVE   &kp N1 &kp N2 &kp N3         &kp N4           &kp N5                               &kp N6 &kp N7           &kp N8               &kp N9       &kp N0   &kp MINUS
&kp TAB     &kp Q  &kp W  &kp E          &kp R            &kp T                                &kp Y  &kp U            &kp I                &kp O        &kp P    &hm RALT BSLH
&kp ESC     &kp A  &kp S  &kp D          &hm LALT F       &kp G                                &kp H  &kp J            &kp K                &kp L        &kp SEMI &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C          &kp V            &kp B  &kp DEL           &kp CAPS    &kp N  &kp M            &hm RCTRL COMMA      &kp DOT      &kp FSLH &kp RGUI
                          &kp LCTRL      &kp LGUI         &mo 1  &bm LSHIFT BSPC   &kp SPACE   &mo 2  &kp RET          &hm RGUI RET
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |       |  {  |  }  |  [   |  ]   |  *   |                   |  +   |  (    |  )    |      |       |       | 
// |       |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |       |  F1 |  F2 |  F3  |  F4  |  /   |        |  |       |  -   |       |  <    |  >   |       |       |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3    &bt BT_SEL 4                 &trans    &trans          &trans           &trans    &trans    &trans
&trans     &trans           &trans            &kp LBKT          &kp RBKT        &kp STAR                     &trans    &hm RALT LPAR   &hm RCTRL RPAR   &kp LBRC  &kp RBRC  &trans
&trans     &kp N1           &kp N2            &kp N3            &kp N4          &kp N5                       &kp N6    &kp N7          &kp N8           &kp N9    &kp N0    &kp TILDE
&trans     &kp F1           &kp F2            &kp F3            &kp F4          &kp F5    &trans   &trans    &kp PLUS  &kp STAR        &kp EQUAL        &trans    &trans    &trans
                                              &trans            &trans          &trans    &trans   &trans    &trans    &trans          &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |        |       |       |       |       |
// |       |     |     |   !  |      |      |                   | HOME | PGDN   |  PGUP | END   |    #  |       |
// |       |  @  |     |   $  |   _  |      |                   | LEFT | DOWN   |  UP   | RIGHT |       |       |
// |       |     |     |   ^  |      |      |        |  |       |   &  |   %    |       |       |       |       |
//                     |      |      |      |  DEL   |  |       |      |        |       |
			bindings = <
&trans    &trans    &trans    &trans         &trans     &trans                                  &trans      &trans    &trans         &trans        &trans    &trans
&trans    &kp TILDE &kp PRCNT &kp EXCL       &kp POUND  &arrow_mac                              &kp HOME    &kp PG_UP &kp UP         &kp PG_DN     &trans    &trans
&trans    &kp AT    &kp DLLR  &kp AMPS       &kp MINUS  &trans                                  &trans      &kp LEFT  &kp DOWN       &kp RIGHT     &trans    &trans
&trans    &trans    &kp MINUS &kp CARET      &kp UNDER  &kp GRAVE  &trans               &trans  &trans      &kp HOME  &trans         &kp END       &trans    &trans
                              &trans         &trans     &trans     &kp DEL              &trans  &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
    };
};


// &trans  &trans  &trans   &trans  &trans    &trans                        &trans   &trans   &trans    &trans    &trans    &trans
// &trans  &trans  &trans   &trans  &trans    &trans                        &trans   &trans   &trans    &trans    &trans    &trans
// &trans  &trans  &trans   &trans  &trans    &trans                        &trans   &trans   &trans    &trans    &trans    &trans
// &trans  &trans  &trans   &trans  &trans    &trans   &trans      &trans   &trans   &trans   &trans    &trans    &trans    &trans
//                          &trans  &trans    &trans   &trans      &trans   &trans   &trans   &trans